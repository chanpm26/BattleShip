(()=>{"use strict";function e(e,t){for(let n=0;n<e.gameBoard.board.length;n++){let a=document.createElement("div");a.classList.add("gameSquare"),a.classList.add(e.playerName),a.setAttribute("data-id",n),t.appendChild(a)}}function t(){location.reload()}function n(e){document.getElementById("mainContainer").classList.add("hidden");const n=document.getElementById("gameOverContainer");n.classList.remove("hidden");let a=document.createElement("h1");a.innerText=`The game is over. ${e} has won!`,n.appendChild(a);const r=document.createElement("button");r.textContent="Start New Game",r.classList.add("newgame"),r.onclick=t,n.appendChild(r)}function a(e){document.getElementById("message").textContent=e}const r=()=>{let e=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],t=[],n=[],a=0;return{board:e,sunkShips:a,successfulAttacks:n,missedAttacks:t,placeShip:function(t,n,a){let r=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];const r=e=>(e=parseInt(e),!!n.includes(e)&&(a.push(e),!0)),i=function(e){return t==a.length?(e=!0,this.sunkStatus=e,e):(e=!1,this.sunkStatus=e,e)};return{nameOfShip:e,length:t,coordinates:n,whereHit:a,sunkStatus:arguments.length>4&&void 0!==arguments[4]&&arguments[4],hit:r,isSunk:i}}(t,n,a);a.forEach((t=>{e[t].push(r)}))},receiveAttack:function(r){if(""!=e[r]){n.push(r);let t=e[r][0].hit(r),i=e[r][0].isSunk();return 1==i&&(a+=1),{attackStatus:t,shipStatus:i}}return t.push(r),!1},report:function(){return e.map((e=>{if(""!=e)return e[0].isSunk(),1==e[0].sunkStatus})).includes(!1)?"There are still alive ships":"All ships have sunk!"}}},i=function(e,t){return{playerName:e,sendAttack:function(e,t){let n="valid";return(e.missedAttacks.includes(t)||null!=e.successfulAttacks&&e.successfulAttacks.includes(t))&&(n="notValid"),"valid"==n?e.receiveAttack(t):"notvalid"},gameBoard:r()}};function o(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e)+e)}const s=Array.from(document.getElementsByClassName("draggable"));function d(e){e.preventDefault()}function l(e){e.target.style.backgroundColor="aqua"}function c(e){e.target.style.backgroundColor=null}function u(e){e.dataTransfer.setData("text",e.target.getAttribute("id"))}function m(e){e.preventDefault();let t=e.dataTransfer.getData("text"),n=e.target;c(e),n.appendChild(document.querySelector(`[id="${t}"]`))}function h(){let e=Array.from(document.getElementsByClassName("droppable")).filter((e=>{if(e.hasChildNodes())return e}));return{boxID:e.map((e=>e.getAttribute("set-id"))),shipID:e.map((e=>e.firstChild.id))}}function p(e,t){return t=Number(t),"carrier"==e?[t,t+1,t+2,t+3,t+4]:"battleship"==e?[t,t+1,t+2,t+3]:"cruiser"==e||"submarine"==e?[t,t+1,t+2]:"destroyer"==e?[t,t+1]:void 0}let g=i("playerOne");beginButton.addEventListener("click",(function(){let e=h(),t=function(e,t){return{shipOne:p(t[0],e[0]),shipTwo:p(t[1],e[1]),shipThree:p(t[2],e[2]),shipFour:p(t[3],e[3]),shipFive:p(t[4],e[4])}}(e.boxID,e.shipID);g.gameBoard.placeShip("carrier",t.shipOne.length,t.shipOne),g.gameBoard.placeShip("battleship",t.shipTwo.length,t.shipTwo),g.gameBoard.placeShip("submarine",t.shipThree.length,t.shipThree),g.gameBoard.placeShip("cruiser",t.shipFour.length,t.shipFour),g.gameBoard.placeShip("destroyer",t.shipFive.length,t.shipFive)}));let f=function(){let e=o(0,2).toString()+o(0,5).toString();e=Number(e);let t=[e,e+1,e+2,e+3,e+4],n=o(3,4).toString()+o(0,6).toString();n=Number(n);let a=[n,n+1,n+2,n+3],r=o(7,8).toString()+o(0,7).toString();r=Number(r);let i=[r,r+1,r+2],s="9"+o(0,7).toString();s=Number(s);let d=[s,s+1,s+2],l=o(5,6).toString()+o(0,7).toString();return l=Number(l),{firstShipCoordinates:t,secondShipCoordinates:a,thirdShipCoordinates:i,fourthShipCoordinates:d,fifthShipCoordinates:[l,l+1,l+2]}}();console.log(f);let v=i("playerTwo");v.gameBoard.placeShip("carrier",5,f.firstShipCoordinates),v.gameBoard.placeShip("battleship",4,f.secondShipCoordinates),v.gameBoard.placeShip("submarine",3,f.thirdShipCoordinates),v.gameBoard.placeShip("cruiser",3,f.fourthShipCoordinates),v.gameBoard.placeShip("destroyer",2,f.firstShipCoordinates);let S="";function y(e,t,n){e==g?(t.style.pointerEvents="none",n.style.pointerEvents="auto"):e==v&&(n.style.pointerEvents="none",t.style.pointerEvents="auto")}function E(e,t,n,r){let i=e.sendAttack(t.gameBoard,r);if("notvalid"==i)return a("That move is not valid. Please pick another tile."),"notvalid";1==i.attackStatus?(n.style.backgroundColor="green",a("")):0==i&&(n.style.backgroundColor="red",a("")),1==i.shipStatus&&a("A ship becomes feast for the fishes!"),S=function(e){return"All ships have sunk!"==e.gameBoard.report()}(t)}function B(e,t,n){if(y(e,t,n),Array.from(document.getElementsByClassName("gameSquare")).forEach((a=>{a.addEventListener("click",(function(){let r=a.getAttribute("data-id");e==g&&"notvalid"!=E(e,v,a,r)&&(y(e=v,t,n),B(e,t,n))}))})),e==v){let a=o(0,99),r=document.querySelector(`[data-id="${a}"]`);setTimeout((()=>{let i=E(e,g,r,a);for(;"notvalid"==i;){let t=o(0,99),n=document.querySelector(`[data-id="${t}"]`);i=E(e,g,n,t)}"notvalid"!=i&&y(e=g,t,n)}),700)}}const C=document.getElementById("boardOne"),b=document.getElementById("boardTwo"),k=document.getElementById("prepareButton"),L=document.getElementById("beginButton"),A=document.getElementById("playerOneName"),I=document.getElementById("newGameButton");let N=document.getElementById("playerName"),T=g,w="";N.addEventListener("input",(function(){w=N.value})),k.addEventListener("click",(function(){document.getElementById("welcomeScreenContainer").classList.add("hidden"),document.getElementById("selectScreenContainer").classList.remove("hidden"),function(){const e=document.getElementById("selectBoard");for(let t=0;t<100;t++){let n=document.createElement("div");n.classList.add("selectSquare"),n.classList.add("droppable"),n.setAttribute("set-id",t),e.appendChild(n)}}(),s.forEach((e=>{e.addEventListener("dragstart",u)})),Array.from(document.getElementsByClassName("droppable")).forEach((e=>{e.addEventListener("dragover",d),e.addEventListener("dragover",l),e.addEventListener("dragleave",c),e.addEventListener("drop",m)})),Array.from(document.getElementsByClassName("droppable")).forEach((e=>{e.addEventListener("drop",(function(){5==h().boxID.length&&document.getElementById("beginButton").classList.remove("hidden")}))}))})),L.addEventListener("click",(function(){document.getElementById("selectScreenContainer").classList.add("hidden"),document.getElementById("mainContainer").classList.remove("hidden"),function(e,t){e.textContent=""!=t?t:"Anonymous Challenger's Board"}(A,w),e(g,C),e(v,b)})),L.addEventListener("click",(function(){B(T,C,b),Array.from(document.getElementsByClassName("gameSquare")).forEach((e=>{e.addEventListener("click",(function(){1==S&&n(T==g?A.textContent:"Computer")}))}))})),document.getElementById("gameOverButton").onclick=n,I.onclick=t})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,