(()=>{"use strict";function e(e,t){for(let n=0;n<e.gameBoard.board.length;n++){let a=document.createElement("div");if(a.classList.add("gameSquare"),a.classList.add(e.playerName),a.setAttribute("data-id",n),t.appendChild(a),""!=e.gameBoard.board[n]){let e=document.createElement("img");e.src="/dist/ship.png",a.appendChild(e)}}}function t(){location.reload()}function n(e){document.getElementById("message").textContent=e}const a=()=>{let e=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],t=[],n=[],a=0;return{board:e,sunkShips:a,successfulAttacks:n,missedAttacks:t,placeShip:function(t,n,a){let i=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];const i=e=>(e=parseInt(e),!!n.includes(e)&&(a.push(e),!0)),o=function(e){return t==a.length?(e=!0,this.sunkStatus=e,e):(e=!1,this.sunkStatus=e,e)};return{nameOfShip:e,length:t,coordinates:n,whereHit:a,sunkStatus:arguments.length>4&&void 0!==arguments[4]&&arguments[4],hit:i,isSunk:o}}(t,n,a);a.forEach((t=>{e[t].push(i)}))},receiveAttack:function(i){if(""!=e[i]){n.push(i);let t=e[i][0].hit(i),o=e[i][0].isSunk();return 1==o&&(a+=1),{attackStatus:t,shipStatus:o}}return t.push(i),!1},report:function(){return e.map((e=>{if(""!=e)return e[0].isSunk(),1==e[0].sunkStatus})).includes(!1)?"There are still alive ships":"All ships have sunk!"}}},i=function(e,t){return{playerName:e,sendAttack:function(e,t){let n="valid";return(e.missedAttacks.includes(t)||null!=e.successfulAttacks&&e.successfulAttacks.includes(t))&&(n="notValid"),"valid"==n?e.receiveAttack(t):"notvalid"},gameBoard:a()}};let o=i("playerOne");o.gameBoard.placeShip("carrier",5,[1,2,3,4,5]),o.gameBoard.placeShip("battleship",4,[40,41,42,43]),o.gameBoard.placeShip("submarine",3,[57,58,59]),o.gameBoard.placeShip("cruiser",3,[27,28,29]),o.gameBoard.placeShip("destroyer",2,[99,98]);let r=i("playerTwo");function s(e,t,n){e==o?(t.style.pointerEvents="none",n.style.pointerEvents="auto"):e==r&&(n.style.pointerEvents="none",t.style.pointerEvents="auto")}r.gameBoard.placeShip("carrier",5,[81,82,83,84,85]),r.gameBoard.placeShip("battleship",4,[63,64,65,66]),r.gameBoard.placeShip("submarine",3,[22,32,42]),r.gameBoard.placeShip("cruiser",3,[57,58,59]),r.gameBoard.placeShip("destroyer",2,[79,89]);let d="";function c(e,t,a,i){let o=e.sendAttack(t.gameBoard,i);if("notvalid"==o)return n("That move is not valid. Please pick another tile."),"notvalid";1==o.attackStatus?(a.style.backgroundColor="green",n("")):0==o&&(a.style.backgroundColor="red",n("")),1==o.shipStatus&&n("A ship becomes feast for the fishes!"),d=function(e){return"All ships have sunk!"==e.gameBoard.report()}(t)}function l(e,t,n){if(s(e,t,n),Array.from(document.getElementsByClassName("gameSquare")).forEach((a=>{a.addEventListener("click",(function(){let i=a.getAttribute("data-id");e==o&&"notvalid"!=c(e,r,a,i)&&(s(e=r,t,n),l(e,t,n))}))})),e==r){let r=(a=0,i=99,a=Math.ceil(a),i=Math.floor(i),Math.floor(Math.random()*(i-a)+a)),d=document.querySelector(`[data-id="${r}"]`);setTimeout((()=>{"notvalid"!=c(e,o,d,r)&&s(e=o,t,n)}),700)}var a,i}const u=document.getElementById("boardOne"),m=document.getElementById("boardTwo"),p=document.getElementById("prepareButton"),h=document.getElementById("beginButton"),g=document.getElementById("playerOneName"),f=document.getElementById("newGameButton");let B=document.getElementById("playerName"),v=o,y="";B.addEventListener("input",(function(){y=B.value})),p.addEventListener("click",(function(){!function(){document.getElementById("welcomeScreenContainer").classList.add("hidden"),document.getElementById("selectScreenContainer").classList.remove("hidden");const e=document.getElementById("selectBoard");for(let t=0;t<100;t++){let t=document.createElement("div");e.appendChild(t)}}(),function(e,t){e.textContent=""!=t?t:"Anonymous Challenger's Board"}(g,y),e(o,u),e(r,m)})),h.addEventListener("click",(function(){document.getElementById("selectScreenContainer").classList.add("hidden"),document.getElementById("mainContainer").classList.remove("hidden")})),h.addEventListener("click",(function(){l(v,u,m),Array.from(document.getElementsByClassName("gameSquare")).forEach((e=>{e.addEventListener("click",(function(){1==d&&function(e){document.getElementById("mainContainer").classList.add("hidden");const n=document.getElementById("gameOverContainer");let a=document.createElement("p");a.innerText=`The game is over. ${e} has won!`,n.appendChild(a);const i=document.createElement("button");i.textContent="Start New Game",i.classList.add("newgame"),i.onclick=t,n.appendChild(i)}(v==o?g.textContent:"Computer")}))}))})),f.onclick=t})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,