(()=>{"use strict";function e(e,t){for(let n=0;n<e.gameBoard.board.length;n++){let a=document.createElement("div");a.classList.add("gameSquare"),a.classList.add(e.playerName),a.setAttribute("data-id",n),t.appendChild(a)}}function t(){location.reload()}function n(e){document.getElementById("message").textContent=e}const a=()=>{let e=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],t=[],n=[],a=0;return{board:e,sunkShips:a,successfulAttacks:n,missedAttacks:t,placeShip:function(t,n,a){let i=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];const i=e=>(e=parseInt(e),!!n.includes(e)&&(a.push(e),!0)),r=function(e){return t==a.length?(e=!0,this.sunkStatus=e,e):(e=!1,this.sunkStatus=e,e)};return{nameOfShip:e,length:t,coordinates:n,whereHit:a,sunkStatus:arguments.length>4&&void 0!==arguments[4]&&arguments[4],hit:i,isSunk:r}}(t,n,a);a.forEach((t=>{e[t].push(i)}))},receiveAttack:function(i){if(""!=e[i]){n.push(i);let t=e[i][0].hit(i),r=e[i][0].isSunk();return 1==r&&(a+=1),{attackStatus:t,shipStatus:r}}return t.push(i),!1},report:function(){return e.map((e=>{if(""!=e)return e[0].isSunk(),1==e[0].sunkStatus})).includes(!1)?"There are still alive ships":"All ships have sunk!"}}},i=function(e,t){return{playerName:e,sendAttack:function(e,t){let n="valid";return(e.missedAttacks.includes(t)||null!=e.successfulAttacks&&e.successfulAttacks.includes(t))&&(n="notValid"),"valid"==n?e.receiveAttack(t):"notvalid"},gameBoard:a()}};function r(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e)+e)}const o=Array.from(document.getElementsByClassName("draggable"));let c="";function s(e){e.preventDefault()}function d(e){e.target.style.backgroundColor="aqua"}function l(e){e.target.style.backgroundColor=null}function u(e){e.dataTransfer.setData("text",e.target.getAttribute("id")),c=e.target.id}function m(e){e.preventDefault();let t=e.dataTransfer.getData("text"),n=e.target;l(e),n.appendChild(document.querySelector(`[id="${t}"]`))}function h(){let e=Array.from(document.getElementsByClassName("droppable")).filter((e=>{if(e.hasChildNodes())return e}));return{boxID:e.map((e=>e.getAttribute("set-id"))),shipID:e.map((e=>e.firstChild.id))}}function p(){Array.from(document.getElementsByClassName("droppable")).forEach((e=>{e.addEventListener("drop",(function(){5==h().boxID.length&&document.getElementById("beginButton").classList.remove("hidden")}))}))}function g(e,t){return t=Number(t),"carrier"==e?[t,t+1,t+2,t+3,t+4]:"battleship"==e?[t,t+1,t+2,t+3]:"cruiser"==e||"submarine"==e?[t,t+1,t+2]:"destroyer"==e?[t,t+1]:void 0}let f=i("playerOne"),v="",E="";beginButton.addEventListener("click",(function(){let e=h(),t=function(e,t){return{shipOne:g(t[0],e[0]),shipTwo:g(t[1],e[1]),shipThree:g(t[2],e[2]),shipFour:g(t[3],e[3]),shipFive:g(t[4],e[4])}}(e.boxID,e.shipID);f.gameBoard.placeShip("carrier",t.shipOne.length,t.shipOne),f.gameBoard.placeShip("battleship",t.shipTwo.length,t.shipTwo),f.gameBoard.placeShip("submarine",t.shipThree.length,t.shipThree),f.gameBoard.placeShip("cruiser",t.shipFour.length,t.shipFour),f.gameBoard.placeShip("destroyer",t.shipFive.length,t.shipFive)}));let S=function(){let e=r(0,2).toString()+r(0,5).toString();e=Number(e);let t=[e,e+1,e+2,e+3,e+4],n=r(3,4).toString()+r(0,6).toString();n=Number(n);let a=[n,n+1,n+2,n+3],i=r(7,8).toString()+r(0,7).toString();i=Number(i);let o=[i,i+1,i+2],c="9"+r(0,7).toString();c=Number(c);let s=[c,c+1,c+2],d=r(5,6).toString()+r(0,7).toString();return d=Number(d),{firstShipCoordinates:t,secondShipCoordinates:a,thirdShipCoordinates:o,fourthShipCoordinates:s,fifthShipCoordinates:[d,d+1]}}(),y=i("playerTwo");function B(e,t,n){e==f?(t.style.pointerEvents="none",n.style.pointerEvents="auto"):e==y&&(n.style.pointerEvents="none",t.style.pointerEvents="auto")}function L(e,t,a,i){let r=e.sendAttack(t.gameBoard,i);return"notvalid"==r?(e==f&&n("That move is not valid. Please pick another tile."),"notvalid"):(1==r.attackStatus?(a.style.backgroundColor="green",n("")):0==r&&(a.style.backgroundColor="red",n("")),1==r.shipStatus&&n("A ship becomes feast for the fishes!"),v=function(e){return"All ships have sunk!"==e.gameBoard.report()}(t),r)}function b(e,n,a){if(B(e,n,a),Array.from(document.getElementsByClassName("gameSquare")).forEach((i=>{i.addEventListener("click",(function(){let r=i.getAttribute("data-id");e==f&&("notvalid"!=L(e,y,i,r)&&(B(e=y,n,a),b(e,n,a)),1==v&&function(e){document.getElementById("mainContainer").classList.add("hidden");const n=document.getElementById("gameOverContainer");n.classList.remove("hidden");let a=document.createElement("h1");a.innerText=`The game is over. ${e} has won!`,n.appendChild(a);const i=document.createElement("button");i.textContent="Start New Game",i.classList.add("newgame"),i.onclick=t,n.appendChild(i)}(e==f?"Computer":playerOneName.textContent))}))})),e==y)if(""!=E){let t=E+1,i=document.querySelector(`[data-id="${t}"]`);setTimeout((()=>{let o=L(e,f,i,t);for(;"notvalid"==o;){let t=r(0,99),n=document.querySelector(`[data-id="${t}"]`);o=L(e,f,n,t)}"notvalid"!=o&&(B(e=f,n,a),E=1==o.attackStatus&&0==o.shipStatus?t:"")}),700)}else{let t=r(0,99),i=document.querySelector(`[data-id="${t}"]`);setTimeout((()=>{let o=L(e,f,i,t);for(;"notvalid"==o;){let t=r(0,99),n=document.querySelector(`[data-id="${t}"]`);o=L(e,f,n,t)}"notvalid"!=o&&(B(e=f,n,a),E=1==o.attackStatus&&0==o.shipStatus?t:"")}),700)}}y.gameBoard.placeShip("carrier",5,S.firstShipCoordinates),y.gameBoard.placeShip("battleship",4,S.secondShipCoordinates),y.gameBoard.placeShip("submarine",3,S.thirdShipCoordinates),y.gameBoard.placeShip("cruiser",3,S.fourthShipCoordinates),y.gameBoard.placeShip("destroyer",2,S.fifthShipCoordinates);const C=document.getElementById("boardOne"),k=document.getElementById("boardTwo"),A=document.getElementById("prepareButton"),I=document.getElementById("beginButton"),N=document.getElementById("playerOneName"),T=document.getElementById("newGameButton");let w=document.getElementById("playerName"),x=f,q="";w.addEventListener("input",(function(){q=w.value})),A.addEventListener("click",(function(){document.getElementById("welcomeScreenContainer").classList.add("hidden"),document.getElementById("selectScreenContainer").classList.remove("hidden"),function(){const e=document.getElementById("selectBoard");for(let t=0;t<100;t++){let n=document.createElement("div");n.classList.add("selectSquare"),n.classList.add("droppable"),n.setAttribute("set-id",t),e.appendChild(n)}}(),o.forEach((e=>{e.addEventListener("dragstart",u)}));const e=Array.from(document.getElementsByClassName("droppable"));e.forEach((t=>{t.addEventListener("dragover",(function(){!function(e){"carrier"==c?e.slice(0,6).concat(e.slice(10,16)).concat(e.slice(20,26)).concat(e.slice(30,36)).concat(e.slice(40,46)).concat(e.slice(50,56)).concat(e.slice(60,66)).concat(e.slice(70,76)).concat(e.slice(80,86)).concat(e.slice(90,96)).forEach((e=>{e.addEventListener("dragover",s),e.addEventListener("dragover",d),e.addEventListener("dragleave",l),e.addEventListener("drop",m),e.addEventListener("drop",p)})):"battleship"==c?e.slice(0,7).concat(e.slice(10,17)).concat(e.slice(20,27)).concat(e.slice(30,37)).concat(e.slice(40,47)).concat(e.slice(50,57)).concat(e.slice(60,67)).concat(e.slice(70,77)).concat(e.slice(80,87)).concat(e.slice(90,97)).forEach((e=>{e.addEventListener("dragover",s),e.addEventListener("dragover",d),e.addEventListener("dragleave",l),e.addEventListener("drop",m),e.addEventListener("drop",p)})):"cruiser"==c||"submarine"==c?e.slice(0,8).concat(e.slice(10,18)).concat(e.slice(20,28)).concat(e.slice(30,38)).concat(e.slice(40,48)).concat(e.slice(50,58)).concat(e.slice(60,68)).concat(e.slice(70,78)).concat(e.slice(80,88)).concat(e.slice(90,98)).forEach((e=>{e.addEventListener("dragover",s),e.addEventListener("dragover",d),e.addEventListener("dragleave",l),e.addEventListener("drop",m),e.addEventListener("drop",p)})):"destroyer"==c&&e.slice(0,9).concat(e.slice(10,19)).concat(e.slice(20,29)).concat(e.slice(30,39)).concat(e.slice(40,49)).concat(e.slice(50,59)).concat(e.slice(60,69)).concat(e.slice(70,79)).concat(e.slice(80,89)).concat(e.slice(90,99)).forEach((e=>{e.addEventListener("dragover",s),e.addEventListener("dragover",d),e.addEventListener("dragleave",l),e.addEventListener("drop",m),e.addEventListener("drop",p)}))}(e)}))}))})),I.addEventListener("click",(function(){document.getElementById("selectScreenContainer").classList.add("hidden"),document.getElementById("mainContainer").classList.remove("hidden"),function(e,t){e.textContent=""!=t?t:"Anonymous Challenger"}(N,q),e(f,C),e(y,k)})),I.addEventListener("click",(function(){b(x,C,k)})),T.onclick=t})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,