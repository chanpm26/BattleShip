(()=>{"use strict";function e(e,t){for(let n=0;n<e.gameBoard.board.length;n++){let a=document.createElement("div");a.classList.add("gameSquare"),a.classList.add(e.playerName),a.setAttribute("data-id",n),t.appendChild(a)}}function t(){location.reload()}function n(e){document.getElementById("message").textContent=e}const a=()=>{let e=[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]],t=[],n=[],a=0;return{board:e,sunkShips:a,successfulAttacks:n,missedAttacks:t,placeShip:function(t,n,a){let r=function(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];const r=e=>(e=parseInt(e),!!n.includes(e)&&(a.push(e),!0)),i=function(e){return t==a.length?(e=!0,this.sunkStatus=e,e):(e=!1,this.sunkStatus=e,e)};return{nameOfShip:e,length:t,coordinates:n,whereHit:a,sunkStatus:arguments.length>4&&void 0!==arguments[4]&&arguments[4],hit:r,isSunk:i}}(t,n,a);a.forEach((t=>{e[t].push(r)}))},receiveAttack:function(r){if(""!=e[r]){n.push(r);let t=e[r][0].hit(r),i=e[r][0].isSunk();return 1==i&&(a+=1),{attackStatus:t,shipStatus:i}}return t.push(r),!1},report:function(){return e.map((e=>{if(""!=e)return e[0].isSunk(),1==e[0].sunkStatus})).includes(!1)?"There are still alive ships":"All ships have sunk!"}}},r=function(e,t){return{playerName:e,sendAttack:function(e,t){let n="valid";return(e.missedAttacks.includes(t)||null!=e.successfulAttacks&&e.successfulAttacks.includes(t))&&(n="notValid"),"valid"==n?e.receiveAttack(t):"notvalid"},gameBoard:a()}};function i(e,t){return e=Math.ceil(e),t=Math.floor(t),Math.floor(Math.random()*(t-e)+e)}const o=Array.from(document.getElementsByClassName("draggable"));function s(e){e.preventDefault()}function d(e){e.target.style.backgroundColor="aqua"}function l(e){e.target.style.backgroundColor=null}function c(e){e.dataTransfer.setData("text",e.target.getAttribute("id"))}function u(e){e.preventDefault();let t=e.dataTransfer.getData("text"),n=e.target;l(e),n.appendChild(document.querySelector(`[id="${t}"]`))}function m(){let e=Array.from(document.getElementsByClassName("droppable")).filter((e=>{if(e.hasChildNodes())return e}));return{boxID:e.map((e=>e.getAttribute("set-id"))),shipID:e.map((e=>e.firstChild.id))}}function h(e,t){return t=Number(t),"carrier"==e?[t,t+1,t+2,t+3,t+4]:"battleship"==e?[t,t+1,t+2,t+3]:"cruiser"==e||"submarine"==e?[t,t+1,t+2]:"destroyer"==e?[t,t+1]:void 0}let p=r("playerOne");beginButton.addEventListener("click",(function(){let e=m(),t=function(e,t){return{shipOne:h(t[0],e[0]),shipTwo:h(t[1],e[1]),shipThree:h(t[2],e[2]),shipFour:h(t[3],e[3]),shipFive:h(t[4],e[4])}}(e.boxID,e.shipID);p.gameBoard.placeShip("carrier",t.shipOne.length,t.shipOne),p.gameBoard.placeShip("battleship",t.shipTwo.length,t.shipTwo),p.gameBoard.placeShip("submarine",t.shipThree.length,t.shipThree),p.gameBoard.placeShip("cruiser",t.shipFour.length,t.shipFour),p.gameBoard.placeShip("destroyer",t.shipFive.length,t.shipFive)}));let g=function(){let e=i(0,2).toString()+i(0,5).toString();e=Number(e);let t=[e,e+1,e+2,e+3,e+4],n=i(3,4).toString()+i(0,6).toString();n=Number(n);let a=[n,n+1,n+2,n+3],r=i(7,8).toString()+i(0,7).toString();r=Number(r);let o=[r,r+1,r+2],s="9"+i(0,7).toString();s=Number(s);let d=[s,s+1,s+2],l=i(5,6).toString()+i(0,7).toString();return l=Number(l),{firstShipCoordinates:t,secondShipCoordinates:a,thirdShipCoordinates:o,fourthShipCoordinates:d,fifthShipCoordinates:[l,l+1]}}(),f=r("playerTwo");f.gameBoard.placeShip("carrier",5,g.firstShipCoordinates),f.gameBoard.placeShip("battleship",4,g.secondShipCoordinates),f.gameBoard.placeShip("submarine",3,g.thirdShipCoordinates),f.gameBoard.placeShip("cruiser",3,g.fourthShipCoordinates),f.gameBoard.placeShip("destroyer",2,g.fifthShipCoordinates),console.log(f.gameBoard.board);let S="";function v(e,t,n){e==p?(t.style.pointerEvents="none",n.style.pointerEvents="auto"):e==f&&(n.style.pointerEvents="none",t.style.pointerEvents="auto")}function y(e,t,a,r){let i=e.sendAttack(t.gameBoard,r);if("notvalid"==i)return n("That move is not valid. Please pick another tile."),"notvalid";1==i.attackStatus?(a.style.backgroundColor="green",n("")):0==i&&(a.style.backgroundColor="red",n("")),1==i.shipStatus&&n("A ship becomes feast for the fishes!"),S=function(e){return"All ships have sunk!"==e.gameBoard.report()}(t)}function E(e,n,a){if(v(e,n,a),Array.from(document.getElementsByClassName("gameSquare")).forEach((r=>{r.addEventListener("click",(function(){let i=r.getAttribute("data-id");e==p&&("notvalid"!=y(e,f,r,i)&&(v(e=f,n,a),E(e,n,a)),1==S&&function(e){document.getElementById("mainContainer").classList.add("hidden");const n=document.getElementById("gameOverContainer");n.classList.remove("hidden");let a=document.createElement("h1");a.innerText=`The game is over. ${e} has won!`,n.appendChild(a);const r=document.createElement("button");r.textContent="Start New Game",r.classList.add("newgame"),r.onclick=t,n.appendChild(r)}(e==p?playerOneName.textContent:"Computer"))}))})),e==f){let t=i(0,99),r=document.querySelector(`[data-id="${t}"]`);setTimeout((()=>{let o=y(e,p,r,t);for(;"notvalid"==o;){let t=i(0,99),n=document.querySelector(`[data-id="${t}"]`);o=y(e,p,n,t)}"notvalid"!=o&&v(e=p,n,a)}),700)}}const B=document.getElementById("boardOne"),b=document.getElementById("boardTwo"),C=document.getElementById("prepareButton"),k=document.getElementById("beginButton"),L=document.getElementById("playerOneName"),A=document.getElementById("newGameButton");let I=document.getElementById("playerName"),N=p,T="";I.addEventListener("input",(function(){T=I.value})),C.addEventListener("click",(function(){document.getElementById("welcomeScreenContainer").classList.add("hidden"),document.getElementById("selectScreenContainer").classList.remove("hidden"),function(){const e=document.getElementById("selectBoard");for(let t=0;t<100;t++){let n=document.createElement("div");n.classList.add("selectSquare"),n.classList.add("droppable"),n.setAttribute("set-id",t),e.appendChild(n)}}(),o.forEach((e=>{e.addEventListener("dragstart",c)})),Array.from(document.getElementsByClassName("droppable")).forEach((e=>{e.addEventListener("dragover",s),e.addEventListener("dragover",d),e.addEventListener("dragleave",l),e.addEventListener("drop",u)})),Array.from(document.getElementsByClassName("droppable")).forEach((e=>{e.addEventListener("drop",(function(){5==m().boxID.length&&document.getElementById("beginButton").classList.remove("hidden")}))}))})),k.addEventListener("click",(function(){document.getElementById("selectScreenContainer").classList.add("hidden"),document.getElementById("mainContainer").classList.remove("hidden"),function(e,t){e.textContent=""!=t?t:"Anonymous Challenger's Board"}(L,T),e(p,B),e(f,b)})),k.addEventListener("click",(function(){E(N,B,b)})),A.onclick=t})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,